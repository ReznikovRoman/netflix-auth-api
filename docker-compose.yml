version: '3.8'

services:
  server:
    platform: linux/amd64
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - $ENV
    expose:
      - 8002
    volumes:
      - .:/app
    command: >
      sh -c "cd /app/src
      && flask db upgrade
      && gunicorn --reload --worker-class gevent --workers 2 --bind 0.0.0.0:$NAA_SERVER_PORT auth.patched:app"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth_api.rule=Host(`api-auth.localhost`,`traefik`,`localhost`)"
      - "traefik.http.routers.auth_api.entrypoints=web"
      - "traefik.http.routers.auth_api.middlewares=google-oauth"
      - "traefik.http.middlewares.google-oauth.redirectregex.regex=^http://localhost:8009/api/v1/social/auth/google.*/?(\\?.*)"
      - "traefik.http.middlewares.google-oauth.redirectregex.replacement=http://api-auth.localhost:8009/api/v1/social/auth/google$${1}"

  redis:
    image: redis:7.0-alpine
    expose:
      - 6379
    volumes:
      - redis_data:/data
    healthcheck:
      test: redis-cli -p 6379 ping || exit 1
      interval: 5s
      timeout: 5s
      retries: 5

  db:
    image: postgres:14.2-alpine
    environment:
      - POSTGRES_USER=${NAA_DB_USER}
      - POSTGRES_PASSWORD=${NAA_DB_PASSWORD}
      - POSTGRES_DB=${NAA_DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready -d $NAA_DB_NAME -U $NAA_DB_USER
      interval: 5s
      timeout: 5s
      retries: 5

  traefik:
    image: traefik:v2.7
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--tracing.jaeger=true"
      - "--tracing.jaeger.samplingParam=0"
      - "--tracing.jaeger.traceContextHeaderName=X-Request-Id"
    ports:
      - "8009:80"
      - "8082:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on:
      - server

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    depends_on:
      - server

volumes:
  redis_data:
  postgres_data:
